from Crypto.Util.number import bytes_to_long

def complex_add(a,b):
    return ((a[0]+b[0])%N, (a[1]+b[1])%N)
def complex_mul(a,b):
    return ((a[0]*b[0]-a[1]*b[1])%N, (a[0]*b[1]+a[1]*b[0])%N)

def complex_pow(a,k):
    res = (1,0)
    tmp = a
    while k>0:
        if k&1:
            res = complex_mul(tmp,res)
        tmp = complex_mul(tmp,tmp)
        k>>=1
    return res

base = bytes_to_long(b'GOCTF{???}')
N = 9613891969102016680606009911539950261406501106149973234767317876223843868064667169046868060331109037214527558145361189875432601771872281799060165442708487
a = (1857877518019856658024788108329290634339552460747608605301064601621573902014083582598804765714454271777590941697032729074429780500649068884434864229248280, 7531554296519296707862888879832633842252001273381963161587357650438852739942774348223566966373915351984233797158597903240533333792006040195809812498419767)
b = complex_pow(a,base)
print(b)

'''
(1533855055814415883193373270777786617614010634672629358042622770362732046116363897855933678085424367919674219872606015152328968223604048122991167064191670, 1527207996322996079682249844900237849466793617905561252322085015761295575124522067417852682582975392725384739028007783440607716576291747497690880246755325)
'''